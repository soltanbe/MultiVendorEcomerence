version: '3.3'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel-app
        container_name: laravel-app
        volumes:
            - .:/var/www
        networks:
            - app-network
        depends_on:
            - mysql
            - redis
        entrypoint: ["sh", "init.sh"]
    nginx:
        image: nginx:alpine
        container_name: nginx
        ports:
            - "8080:80"
        volumes:
            - .:/var/www
            - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - app-network

    mysql:
        image: mysql:8.0
        container_name: mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
            - "33061:33061"
        volumes:
            - db-data:/var/lib/mysql
        networks:
            - app-network

    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - "6378:6378"
        networks:
            - app-network

    queue-worker:
        image: laravel-app
        container_name: laravel-queue
        volumes:
            - .:/var/www
        depends_on:
            - app
            - redis
        networks:
            - app-network
        command: php artisan queue:work --queue=notify-vendor-sub-order,send-notifications --tries=3

    scheduler:
        image: laravel-app
        container_name: laravel-scheduler
        volumes:
            - .:/var/www
        depends_on:
            - app
        networks:
            - app-network
        command: >
            sh -c "while true; do php artisan schedule:run --verbose --no-interaction; sleep 60; done"
    vite:
        image: node:18
        container_name: vite
        working_dir: /var/www
        volumes:
            - .:/var/www
        ports:
            - "5173:5173"
        command: sh -c "npm install && npm run dev -- --host"
        depends_on:
            - app
        networks:
            - app-network
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        restart: unless-stopped
        ports:
            - "8081:80"
        environment:
            PMA_HOST: mysql
            PMA_PORT: 33061
            PMA_USER: ${DB_USERNAME}
            PMA_PASSWORD: ${DB_PASSWORD}
        depends_on:
            - mysql
        networks:
            - app-network

networks:
    app-network:

volumes:
    db-data:
